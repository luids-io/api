// Copyright 2019 Luis Guill√©n Civera <luisguillenc@gmail.com>. View LICENSE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.6.1
// source: github.com/luids-io/api/schemas/dnsutil/finder.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetResolvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetResolvRequest) Reset() {
	*x = GetResolvRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResolvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResolvRequest) ProtoMessage() {}

func (x *GetResolvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResolvRequest.ProtoReflect.Descriptor instead.
func (*GetResolvRequest) Descriptor() ([]byte, []int) {
	return file_github_com_luids_io_api_schemas_dnsutil_finder_proto_rawDescGZIP(), []int{0}
}

func (x *GetResolvRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetResolvResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ResolvData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetResolvResponse) Reset() {
	*x = GetResolvResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResolvResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResolvResponse) ProtoMessage() {}

func (x *GetResolvResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResolvResponse.ProtoReflect.Descriptor instead.
func (*GetResolvResponse) Descriptor() ([]byte, []int) {
	return file_github_com_luids_io_api_schemas_dnsutil_finder_proto_rawDescGZIP(), []int{1}
}

func (x *GetResolvResponse) GetData() *ResolvData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ResolvsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Since         *timestamp.Timestamp `protobuf:"bytes,1,opt,name=since,proto3" json:"since,omitempty"`
	To            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	ServerIp      string               `protobuf:"bytes,3,opt,name=server_ip,json=serverIp,proto3" json:"server_ip,omitempty"`
	ClientIp      string               `protobuf:"bytes,4,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	Name          string               `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	ResolvedIp    string               `protobuf:"bytes,6,opt,name=resolved_ip,json=resolvedIp,proto3" json:"resolved_ip,omitempty"`
	ResolvedCname string               `protobuf:"bytes,7,opt,name=resolved_cname,json=resolvedCname,proto3" json:"resolved_cname,omitempty"`
	Qid           int32                `protobuf:"varint,8,opt,name=qid,proto3" json:"qid,omitempty"`
	ReturnCode    int32                `protobuf:"varint,9,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	Tld           string               `protobuf:"bytes,10,opt,name=tld,proto3" json:"tld,omitempty"`
	TldPlusOne    string               `protobuf:"bytes,11,opt,name=tld_plus_one,json=tldPlusOne,proto3" json:"tld_plus_one,omitempty"`
}

func (x *ResolvsFilter) Reset() {
	*x = ResolvsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolvsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolvsFilter) ProtoMessage() {}

func (x *ResolvsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolvsFilter.ProtoReflect.Descriptor instead.
func (*ResolvsFilter) Descriptor() ([]byte, []int) {
	return file_github_com_luids_io_api_schemas_dnsutil_finder_proto_rawDescGZIP(), []int{2}
}

func (x *ResolvsFilter) GetSince() *timestamp.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

func (x *ResolvsFilter) GetTo() *timestamp.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ResolvsFilter) GetServerIp() string {
	if x != nil {
		return x.ServerIp
	}
	return ""
}

func (x *ResolvsFilter) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *ResolvsFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResolvsFilter) GetResolvedIp() string {
	if x != nil {
		return x.ResolvedIp
	}
	return ""
}

func (x *ResolvsFilter) GetResolvedCname() string {
	if x != nil {
		return x.ResolvedCname
	}
	return ""
}

func (x *ResolvsFilter) GetQid() int32 {
	if x != nil {
		return x.Qid
	}
	return 0
}

func (x *ResolvsFilter) GetReturnCode() int32 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *ResolvsFilter) GetTld() string {
	if x != nil {
		return x.Tld
	}
	return ""
}

func (x *ResolvsFilter) GetTldPlusOne() string {
	if x != nil {
		return x.TldPlusOne
	}
	return ""
}

type ListResolvsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Max     int32            `protobuf:"varint,1,opt,name=max,proto3" json:"max,omitempty"`
	Next    string           `protobuf:"bytes,2,opt,name=next,proto3" json:"next,omitempty"`
	Filters []*ResolvsFilter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	Reverse bool             `protobuf:"varint,4,opt,name=reverse,proto3" json:"reverse,omitempty"`
}

func (x *ListResolvsRequest) Reset() {
	*x = ListResolvsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResolvsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResolvsRequest) ProtoMessage() {}

func (x *ListResolvsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResolvsRequest.ProtoReflect.Descriptor instead.
func (*ListResolvsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_luids_io_api_schemas_dnsutil_finder_proto_rawDescGZIP(), []int{3}
}

func (x *ListResolvsRequest) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *ListResolvsRequest) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *ListResolvsRequest) GetFilters() []*ResolvsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListResolvsRequest) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

type ListResolvsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ResolvData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Next string        `protobuf:"bytes,2,opt,name=next,proto3" json:"next,omitempty"`
}

func (x *ListResolvsResponse) Reset() {
	*x = ListResolvsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResolvsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResolvsResponse) ProtoMessage() {}

func (x *ListResolvsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResolvsResponse.ProtoReflect.Descriptor instead.
func (*ListResolvsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_luids_io_api_schemas_dnsutil_finder_proto_rawDescGZIP(), []int{4}
}

func (x *ListResolvsResponse) GetData() []*ResolvData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListResolvsResponse) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

var File_github_com_luids_io_api_schemas_dnsutil_finder_proto protoreflect.FileDescriptor

var file_github_com_luids_io_api_schemas_dnsutil_finder_proto_rawDesc = []byte{
	0x0a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x75, 0x69,
	0x64, 0x73, 0x2d, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x73, 0x2f, 0x64, 0x6e, 0x73, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6c, 0x75, 0x69, 0x64, 0x73, 0x2e, 0x64, 0x6e,
	0x73, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x75, 0x69, 0x64, 0x73, 0x2d, 0x69, 0x6f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x64, 0x6e, 0x73, 0x75, 0x74,
	0x69, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x75, 0x69, 0x64, 0x73, 0x2e, 0x64,
	0x6e, 0x73, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xea, 0x02, 0x0a, 0x0d, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x05,
	0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x2a,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x49, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x43, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x71, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6c, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x6c, 0x64, 0x5f, 0x70, 0x6c, 0x75,
	0x73, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6c, 0x64,
	0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x61, 0x78,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x65, 0x78, 0x74, 0x12, 0x39, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x75, 0x69, 0x64, 0x73, 0x2e, 0x64, 0x6e,
	0x73, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x73,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x22, 0x5b, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6c, 0x75, 0x69, 0x64, 0x73, 0x2e, 0x64, 0x6e, 0x73, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x32, 0xbe, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x56, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x12, 0x22,
	0x2e, 0x6c, 0x75, 0x69, 0x64, 0x73, 0x2e, 0x64, 0x6e, 0x73, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6c, 0x75, 0x69, 0x64, 0x73, 0x2e, 0x64, 0x6e, 0x73, 0x75, 0x74,
	0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0b, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x73, 0x12, 0x24, 0x2e, 0x6c, 0x75, 0x69, 0x64, 0x73,
	0x2e, 0x64, 0x6e, 0x73, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x6c, 0x75, 0x69, 0x64, 0x73, 0x2e, 0x64, 0x6e, 0x73, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x75, 0x69, 0x64, 0x73, 0x2d, 0x69, 0x6f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x64, 0x6e, 0x73, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_luids_io_api_schemas_dnsutil_finder_proto_rawDescOnce sync.Once
	file_github_com_luids_io_api_schemas_dnsutil_finder_proto_rawDescData = file_github_com_luids_io_api_schemas_dnsutil_finder_proto_rawDesc
)

func file_github_com_luids_io_api_schemas_dnsutil_finder_proto_rawDescGZIP() []byte {
	file_github_com_luids_io_api_schemas_dnsutil_finder_proto_rawDescOnce.Do(func() {
		file_github_com_luids_io_api_schemas_dnsutil_finder_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_luids_io_api_schemas_dnsutil_finder_proto_rawDescData)
	})
	return file_github_com_luids_io_api_schemas_dnsutil_finder_proto_rawDescData
}

var file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_github_com_luids_io_api_schemas_dnsutil_finder_proto_goTypes = []interface{}{
	(*GetResolvRequest)(nil),    // 0: luids.dnsutil.v1.GetResolvRequest
	(*GetResolvResponse)(nil),   // 1: luids.dnsutil.v1.GetResolvResponse
	(*ResolvsFilter)(nil),       // 2: luids.dnsutil.v1.ResolvsFilter
	(*ListResolvsRequest)(nil),  // 3: luids.dnsutil.v1.ListResolvsRequest
	(*ListResolvsResponse)(nil), // 4: luids.dnsutil.v1.ListResolvsResponse
	(*ResolvData)(nil),          // 5: luids.dnsutil.v1.ResolvData
	(*timestamp.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_github_com_luids_io_api_schemas_dnsutil_finder_proto_depIdxs = []int32{
	5, // 0: luids.dnsutil.v1.GetResolvResponse.data:type_name -> luids.dnsutil.v1.ResolvData
	6, // 1: luids.dnsutil.v1.ResolvsFilter.since:type_name -> google.protobuf.Timestamp
	6, // 2: luids.dnsutil.v1.ResolvsFilter.to:type_name -> google.protobuf.Timestamp
	2, // 3: luids.dnsutil.v1.ListResolvsRequest.filters:type_name -> luids.dnsutil.v1.ResolvsFilter
	5, // 4: luids.dnsutil.v1.ListResolvsResponse.data:type_name -> luids.dnsutil.v1.ResolvData
	0, // 5: luids.dnsutil.v1.Finder.GetResolv:input_type -> luids.dnsutil.v1.GetResolvRequest
	3, // 6: luids.dnsutil.v1.Finder.ListResolvs:input_type -> luids.dnsutil.v1.ListResolvsRequest
	1, // 7: luids.dnsutil.v1.Finder.GetResolv:output_type -> luids.dnsutil.v1.GetResolvResponse
	4, // 8: luids.dnsutil.v1.Finder.ListResolvs:output_type -> luids.dnsutil.v1.ListResolvsResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_github_com_luids_io_api_schemas_dnsutil_finder_proto_init() }
func file_github_com_luids_io_api_schemas_dnsutil_finder_proto_init() {
	if File_github_com_luids_io_api_schemas_dnsutil_finder_proto != nil {
		return
	}
	file_github_com_luids_io_api_schemas_dnsutil_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResolvRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResolvResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolvsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResolvsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResolvsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_luids_io_api_schemas_dnsutil_finder_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_luids_io_api_schemas_dnsutil_finder_proto_goTypes,
		DependencyIndexes: file_github_com_luids_io_api_schemas_dnsutil_finder_proto_depIdxs,
		MessageInfos:      file_github_com_luids_io_api_schemas_dnsutil_finder_proto_msgTypes,
	}.Build()
	File_github_com_luids_io_api_schemas_dnsutil_finder_proto = out.File
	file_github_com_luids_io_api_schemas_dnsutil_finder_proto_rawDesc = nil
	file_github_com_luids_io_api_schemas_dnsutil_finder_proto_goTypes = nil
	file_github_com_luids_io_api_schemas_dnsutil_finder_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FinderClient is the client API for Finder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FinderClient interface {
	GetResolv(ctx context.Context, in *GetResolvRequest, opts ...grpc.CallOption) (*GetResolvResponse, error)
	ListResolvs(ctx context.Context, in *ListResolvsRequest, opts ...grpc.CallOption) (*ListResolvsResponse, error)
}

type finderClient struct {
	cc grpc.ClientConnInterface
}

func NewFinderClient(cc grpc.ClientConnInterface) FinderClient {
	return &finderClient{cc}
}

func (c *finderClient) GetResolv(ctx context.Context, in *GetResolvRequest, opts ...grpc.CallOption) (*GetResolvResponse, error) {
	out := new(GetResolvResponse)
	err := c.cc.Invoke(ctx, "/luids.dnsutil.v1.Finder/GetResolv", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *finderClient) ListResolvs(ctx context.Context, in *ListResolvsRequest, opts ...grpc.CallOption) (*ListResolvsResponse, error) {
	out := new(ListResolvsResponse)
	err := c.cc.Invoke(ctx, "/luids.dnsutil.v1.Finder/ListResolvs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FinderServer is the server API for Finder service.
type FinderServer interface {
	GetResolv(context.Context, *GetResolvRequest) (*GetResolvResponse, error)
	ListResolvs(context.Context, *ListResolvsRequest) (*ListResolvsResponse, error)
}

// UnimplementedFinderServer can be embedded to have forward compatible implementations.
type UnimplementedFinderServer struct {
}

func (*UnimplementedFinderServer) GetResolv(context.Context, *GetResolvRequest) (*GetResolvResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResolv not implemented")
}
func (*UnimplementedFinderServer) ListResolvs(context.Context, *ListResolvsRequest) (*ListResolvsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListResolvs not implemented")
}

func RegisterFinderServer(s *grpc.Server, srv FinderServer) {
	s.RegisterService(&_Finder_serviceDesc, srv)
}

func _Finder_GetResolv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResolvRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinderServer).GetResolv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luids.dnsutil.v1.Finder/GetResolv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinderServer).GetResolv(ctx, req.(*GetResolvRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finder_ListResolvs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListResolvsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinderServer).ListResolvs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luids.dnsutil.v1.Finder/ListResolvs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinderServer).ListResolvs(ctx, req.(*ListResolvsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Finder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "luids.dnsutil.v1.Finder",
	HandlerType: (*FinderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetResolv",
			Handler:    _Finder_GetResolv_Handler,
		},
		{
			MethodName: "ListResolvs",
			Handler:    _Finder_ListResolvs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/luids-io/api/schemas/dnsutil/finder.proto",
}
